apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 26

    }
    compileOptions.encoding = 'UTF-8'
    lintOptions {
        abortOnError false
    }
    allprojects {
        repositories {
            jcenter()
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation files('src/main/libs/commons-net-3.5.jar')
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.0.2'
}

def SDK_BASENAME = "sdk";
def SDK_VERSION = "_V0.1.8";
def sdkDestinationPath = "build";
def zipFile = file('build/intermediates/bundles/default/classes.jar')

task deleteBuild(type: Delete) {
//    delete sdkDestinationPath + SDK_BASENAME + SDK_VERSION + ".jar"
    delete sdkDestinationPath + SDK_BASENAME + ".jar"
}

task makeJar(type: Jar) {
    from zipTree(zipFile)
    from fileTree(dir: 'src/main',includes: ['assets/**'])
//    baseName = SDK_BASENAME + SDK_VERSION
    baseName = SDK_BASENAME
    destinationDir = file(sdkDestinationPath)
}

//task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//    classifier = 'javadoc'
//    options.encoding = "UTF-8"
//
//    from androidJavadocs.destinationDir
//}

makeJar.dependsOn(deleteBuild, build)
